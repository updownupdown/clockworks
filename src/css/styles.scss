@import url("https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@300;400;500;600;700&display=swap");
@import "./media.scss";

$theme-colors: (
  "black": #000000,
  "white": #ffffff,
  "B300": #0071b8,
  "B400": #05639d,
  "B500": #05598d,
  "B600": #03436b,
  "K900": #24292d,
  "K800": #4e5256,
  "K700": #696f74,
  "K600": #83898e,
  "K500": #9da3a8,
  "K400": #b5bbc0,
  "K300": #ced3d6,
  "K200": #dde1e3,
  "K150": #edeef0,
  "K100": #f7f8f9,
);

:root {
  // Generate hex/rgb CSS vars for default/rgba usage, respectively
  @function hexToRGB($hex) {
    @return red($hex), green($hex), blue($hex);
  }
  @each $name, $color in $theme-colors {
    --#{$name}: #{$color};
    --#{$name}-rgb: #{hexToRGB($color)};
  }

  --font: "Red Hat Display", sans-serif;

  --box-shadow-300: 1px 2px 10px rgba(0, 0, 0, 0.08);
  --box-shadow-600: 1px 2px 10px $line2, 6px 16px 30px rgba(0, 0, 0, 0.06);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  position: relative;
  margin: 0;
  line-height: 1;

  $gridUnit: 10px;
  $lines: rgba(255, 255, 255, 0.08);
  $linesLarge: rgba(255, 255, 255, 0.11);

  background-color: var(--B300);

  // vertical lines, horizontal lines; large vertical lines, large horizontal lines
  background-image: linear-gradient(to right, $lines 1px, transparent 1px),
    linear-gradient(to bottom, $lines 1px, transparent 1px),
    linear-gradient(to right, $linesLarge 1px, transparent 1px),
    linear-gradient(to bottom, $linesLarge 1px, transparent 1px);

  background-size: $gridUnit $gridUnit, $gridUnit $gridUnit,
    $gridUnit * 10 $gridUnit * 10, $gridUnit * 10 $gridUnit * 10;

  svg {
    display: block;

    .gear-shape {
      cursor: pointer;
      transition: 0.1s ease fill;
      fill: rgba(var(--B400-rgb), 0.7);
      stroke: rgba(255, 255, 255, 0.6);
      stroke-linejoin: round;
      stroke-width: 1;

      &:hover {
        fill: rgba(var(--white-rgb), 0.08);
      }
    }

    .gear-center {
      pointer-events: none;
      fill: none;
      stroke: rgba(0, 0, 0, 0.2);
      stroke-linejoin: round;
      stroke-width: 1;
    }

    .gear-indicator {
      pointer-events: none;
      fill: rgba(255, 255, 255, 0.8);
      stroke-linejoin: round;
      stroke-width: 1;
    }

    .gear-textpath {
      pointer-events: none;
      fill: none;
    }
    .gear-text {
      user-select: none;
      pointer-events: none;
      transform: rotate(90deg);
      transform-origin: center center;
      font-family: var(--font);
      font-weight: 300;
      fill: rgba(255, 255, 255, 0.3);
    }

    .gear-pitch {
      pointer-events: none;
      stroke: rgba(0, 0, 0, 0.2);
    }
  }
}

body,
button {
  font-family: var(--font);
}

.paper {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.gear {
  position: absolute;
}

.gear0 {
  top: 0;
  left: 0;
}

.button {
  position: relative;
  z-index: 100;
}

.menu {
  position: absolute;
  top: 0;
  right: 0;
  padding: 20px;
  width: 180px;

  display: flex;
  flex-direction: column;
  gap: 40px;

  background: rgba(0, 0, 0, 0.25);
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.1), 0 0 20px rgba(0, 0, 0, 0.1);

  &__gear {
    display: flex;
    flex-direction: column;
    gap: 8px;

    &__header {
      display: flex;
      justify-content: space-between;
    }

    button {
      cursor: pointer;
      transition: 0.25s ease color;
      outline: none;
      background: none;
      border: none;

      font-size: 12px;
      font-weight: 500;
      color: rgba(var(--white-rgb), 0.7);

      &:hover {
        color: rgba(var(--white-rgb), 1);
      }

      &.btn-fixed {
        opacity: 0.4;

        &--fixed {
          opacity: 1;
        }
      }
    }

    span {
      font-size: 14px;
      font-weight: 600;
      color: var(--white);
    }
  }
}

.button {
  cursor: pointer;
  transition: 0.25s ease border-color;
  outline: none;

  border-radius: 2px;
  border: 1px solid rgba(var(--white-rgb), 0.2);
  background: unset;
  padding: 4px 8px;

  font-size: 14px;
  font-weight: 600;
  color: var(--white);

  &:hover {
    border-color: rgba(var(--white-rgb), 0.5);
  }
}

input[type="range"] {
  appearance: none;
  outline: none;

  transition: 0.2s ease background;
  width: 100%;
  height: 4px;
  margin: 10px 0;

  border-radius: 4px;
  background: rgba(0, 0, 0, 0.3);

  &:not(:disabled) {
    cursor: pointer;

    &:hover {
      background: rgba(0, 0, 0, 0.5);
    }
  }
}

@mixin slider-thumb {
  $size: 14px;

  appearance: none;
  transition: 0.2s ease all;
  width: $size;
  height: $size;

  border-radius: 50%;
  border: 1px solid rgba(var(--white-rgb), 0.7);
  background: var(--B300);
  box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.1);

  &:hover {
    border-color: rgba(var(--white-rgb), 0.9);
    background: var(--B600);
  }
}

.slider::-webkit-slider-thumb {
  @include slider-thumb;
}

.slider::-moz-range-thumb {
  @include slider-thumb;
}
.slider:disabled::-webkit-slider-thumb {
  display: none;
}
.slider:disabled::-moz-slider-thumb {
  display: none;
}

#animate-me {
  background: white;
}
