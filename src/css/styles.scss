@import url("https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@300;400;500;600;700&family=Inconsolata:wght@300&display=swap");
@import "./media.scss";

$theme-colors: (
  "black": #000000,
  "white": #ffffff,
  "B300": #0071b8,
  "B400": #05639d,
  "B500": #05598d,
  "B600": #03436b,
  "K900": #24292d,
  "K800": #4e5256,
  "K700": #696f74,
  "K600": #83898e,
  "K500": #9da3a8,
  "K400": #b5bbc0,
  "K300": #ced3d6,
  "K200": #dde1e3,
  "K150": #edeef0,
  "K100": #f7f8f9,
  "status-green": #3eab60,
  "status-orange": #f19c2d,
  "status-red": #d75453,
  "status-blue": #42a8d5,
);

:root {
  // Generate hex/rgb CSS vars for default/rgba usage, respectively
  @function hexToRGB($hex) {
    @return red($hex), green($hex), blue($hex);
  }
  @each $name, $color in $theme-colors {
    --#{$name}: #{$color};
    --#{$name}-rgb: #{hexToRGB($color)};
  }

  --font: "Red Hat Display", sans-serif;
  --fontMono: "Inconsolata", sans-serif;

  --box-shadow-300: 1px 2px 10px rgba(0, 0, 0, 0.08);
  --box-shadow-600: 1px 2px 10px $line2, 6px 16px 30px rgba(0, 0, 0, 0.06);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  overflow: hidden;
  position: relative;
  margin: 0;
  line-height: 1;

  background: var(--B400);

  color: var(--K800);
}

body,
button,
input,
select {
  font-family: var(--font);
}

button {
  cursor: pointer;
  margin: 0;
  padding: 0;
  border: unset;
  background: unset;

  &:focus {
    outline: none;
  }
}

#root {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.layout {
  position: relative;
  z-index: 1;
  display: flex;
  width: 100vw;
  height: 100vh;
  overflow: hidden;

  &__menu {
    z-index: 2;
    width: 400px;
    max-width: 100vw;
    flex-shrink: 0;
    height: 100vh;
    overflow: hidden;

    background: var(--white);
    box-shadow: 1px 2px 12px rgba(0, 0, 0, 0.15),
      2px 4px 40px rgba(0, 0, 0, 0.15);
  }
  &__canvas {
    z-index: 1;
    overflow: hidden;
    height: 100%;
  }

  @media #{$query-max-md} {
    &:before {
      content: "";
      position: fixed;
      z-index: 99;
      display: none;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.2);
      backdrop-filter: blur(4px);
    }

    &__menu {
      position: fixed;
      z-index: 100;
      display: none;
      top: 60px;
      left: 50%;
      transform: translateX(-50%);
      max-width: calc(100vw - 40px);
      max-height: calc(100vh - 80px);

      border-radius: 12px;
    }

    .show-menu & {
      &:before {
        display: block;
      }

      .layout__menu {
        display: flex;
      }
    }
  }
}

.menu-trigger {
  display: none;
}

@media #{$query-max-md} {
  .menu-trigger {
    transition: 0.2s ease all;
    position: fixed;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    padding: 0 12px;

    font-size: 14px;
    font-weight: 700;
    color: var(--white);

    border-radius: 6px;
    background: rgba(var(--white-rgb), 0.2);

    &:hover {
      background: rgba(var(--white-rgb), 0.4);
    }
  }
}

.canvas-wrap {
  width: 100vw;
  height: 100vh;
}

.canvas {
  cursor: grab;
  // overflow: hidden;

  border: 30px solid var(--B300);
  box-shadow: 1px 2px 12px rgba(0, 0, 0, 0.15), 2px 4px 40px rgba(0, 0, 0, 0.15);

  $gridUnit: 10px;
  $lines: rgba(255, 255, 255, 0.08);
  $linesLarge: rgba(255, 255, 255, 0.11);

  background-color: var(--B300);

  // vertical lines, horizontal lines; large vertical lines, large horizontal lines
  background-image: linear-gradient(to right, $lines 1px, transparent 1px),
    linear-gradient(to bottom, $lines 1px, transparent 1px),
    linear-gradient(to right, $linesLarge 1px, transparent 1px),
    linear-gradient(to bottom, $linesLarge 1px, transparent 1px);

  background-size: $gridUnit $gridUnit, $gridUnit $gridUnit,
    $gridUnit * 10 $gridUnit * 10, $gridUnit * 10 $gridUnit * 10;
}

.canvas-actions {
  position: fixed;
  z-index: 10;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: row;
  padding: 0 12px 12px 0;

  &:before {
    content: "";
    position: absolute;
    z-index: 1;
    pointer-events: none;
    bottom: 0;
    right: 0;
    width: 700px;
    height: 250px;

    border-radius: 50%;

    background: radial-gradient(
      rgba(var(--B500-rgb), 0.4) 0%,
      rgba(var(--B500-rgb), 0) 60%
    );

    transform: translateX(50%) translateY(50%);
  }

  button {
    transition: 0.2s ease background;
    position: relative;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 8px;

    border-radius: 6px;

    svg {
      width: 32px;
      height: 32px;
      path {
        fill: var(--white);
      }
    }

    &:hover {
      background: rgba(var(--white-rgb), 0.2);
    }
  }
}

::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: var(--K150);
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: var(--K300);
}

.clock-hand {
  pointer-events: none;
  position: absolute;
  z-index: 10;
  top: 50%;
  left: 50%;
  width: 400px;
  aspect-ratio: 1;
  transform: translateX(-50%) translateY(-50%);

  svg {
    position: absolute;
    width: 100%;
    height: 100%;
    fill: white;
  }

  .canvas--pendulum & {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.68, -0.42, 0.76, 0.54);
  }

  .disable-animations & {
    transition-property: none;
  }

  .hand {
    display: block;
    width: 100%;
    height: 100%;
    animation-iteration-count: infinite;

    .canvas--smooth & {
      animation-name: spin-hand;
      animation-timing-function: linear;
    }
    .disable-animations &,
    .canvas--paused.canvas--smooth & {
      animation-play-state: paused;
    }

    @keyframes spin-hand {
      to {
        transform: rotate(360deg);
      }
    }
  }
}

@import "./inputs.scss";
